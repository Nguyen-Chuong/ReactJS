[{"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\index.js":"1","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\App.js":"2","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\InsertDataApplication.jsx":"4","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\PrivateRoute.jsx":"5","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HomePage.jsx":"6","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\LoginPage.jsx":"7","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\EditForm.jsx":"8","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HoachToanComponent\\HoachToanAddForm.jsx":"9","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\AddForm.jsx":"10","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HoachToanComponent\\HoachToanHomePage.jsx":"11","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HoachToanComponent\\HoachToanEditForm.jsx":"12","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIUserAuthService.js":"13","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIValueService.js":"14","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIRoomService.js":"15","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPICateService.js":"16","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIComponentService.js":"17","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\KPIComponent\\ListKPI.jsx":"18","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\KPIComponent\\EditKPI.jsx":"19","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\KPIComponent\\AddKPI.jsx":"20"},{"size":500,"mtime":1615338283000,"results":"21","hashOfConfig":"22"},{"size":331,"mtime":1615338283000,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1615338283000,"results":"24","hashOfConfig":"22"},{"size":1905,"mtime":1615522596453,"results":"25","hashOfConfig":"22"},{"size":451,"mtime":1615451388033,"results":"26","hashOfConfig":"22"},{"size":16900,"mtime":1615542591472,"results":"27","hashOfConfig":"22"},{"size":2823,"mtime":1615451388024,"results":"28","hashOfConfig":"22"},{"size":5389,"mtime":1615456513241,"results":"29","hashOfConfig":"22"},{"size":9819,"mtime":1615519746316,"results":"30","hashOfConfig":"22"},{"size":9656,"mtime":1615519746340,"results":"31","hashOfConfig":"22"},{"size":16558,"mtime":1615456513251,"results":"32","hashOfConfig":"22"},{"size":5429,"mtime":1615456513229,"results":"33","hashOfConfig":"22"},{"size":291,"mtime":1615338283000,"results":"34","hashOfConfig":"22"},{"size":1745,"mtime":1615424397882,"results":"35","hashOfConfig":"22"},{"size":271,"mtime":1615338283000,"results":"36","hashOfConfig":"22"},{"size":999,"mtime":1615542862106,"results":"37","hashOfConfig":"22"},{"size":438,"mtime":1615338283000,"results":"38","hashOfConfig":"22"},{"size":8888,"mtime":1615772792010,"results":"39","hashOfConfig":"22"},{"size":6264,"mtime":1615536098381,"results":"40","hashOfConfig":"22"},{"size":7896,"mtime":1615544101761,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kxh18g",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\index.js",[],["92","93"],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\App.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\InsertDataApplication.jsx",["94"],"import React, {Component} from \"react\";\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom'\nimport HomePage from \"./HomePage\";\nimport LoginPage from \"./LoginPage\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport EditForm from \"./EditForm\";\nimport AddForm from \"./AddForm\";\nimport HoachToanHomePage from \"./HoachToanComponent/HoachToanHomePage\";\nimport HoachToanEditForm from \"./HoachToanComponent/HoachToanEditForm\";\nimport HoachToanAddForm from \"./HoachToanComponent/HoachToanAddForm\";\nimport ListKPI from \"./KPIComponent/ListKPI\";\nimport EditKPI from \"./KPIComponent/EditKPI\";\nimport AddKPI from \"./KPIComponent/AddKPI\";\n\nclass InsertDataApplication extends Component{\n\n    render() {\n        return(\n            <Router>\n                <>\n                    <Switch>\n                        <Route path =\"/\" exact component = {LoginPage}/>\n                        <PrivateRoute path = \"/home\" exact component = {HomePage}/>\n                        <PrivateRoute path = \"/kpivalues/:kpi_id/:start_date/:range_type/:component_type\" component = {EditForm}/>\n                        <PrivateRoute path = \"/kpivalues/add\" component = {AddForm}/>\n                        <PrivateRoute path = \"/hoachtoan\" exact component = {HoachToanHomePage}/>\n                        <PrivateRoute path = \"/hoachtoanedit/:kpi_id/:start_date/:range_type/:component_type\" component = {HoachToanEditForm}/>\n                        <PrivateRoute path = \"/hoachtoan/add\" component = {HoachToanAddForm}/>\n                        <PrivateRoute path = \"/listkpi\" exact component = {ListKPI}/>\n                        <PrivateRoute path = \"/kpiedit/:category_id\" component = {EditKPI}/>\n                        <PrivateRoute path = \"/listkpi/add\" component = {AddKPI}/>\n                    </Switch>\n                </>\n            </Router>\n        )\n    }\n\n}\n\nexport default InsertDataApplication","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\PrivateRoute.jsx",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HomePage.jsx",["95","96","97","98","99","100","101","102"],"import React, {Component} from \"react\";\nimport logo from './Image/logo.jpg'\nimport '../CSS/home.css'\nimport KPIValueService from \"../Service/KPIValueService\";\nimport KPICateService from \"../Service/KPICateService\";\nimport {Field, Form, Formik} from \"formik\";\nimport {Link} from \"react-router-dom\";\nimport KPIRoomService from \"../Service/KPIRoomService\";\n\nclass HomePage extends Component{\n\n    // constructor\n    constructor(props) {\n        super(props);\n        this.state ={\n            rooms: [],\n            KPICate:[],\n            KPIValue: [],\n            room_id: '',\n            numrecord: '',\n            pagecurrent: 1,\n            numpage: 1,\n            Message: null,\n            component_type: '',\n            category_id: ''\n        }\n        this.onClickRoom = this.onClickRoom.bind(this)\n        this.onClickToBindDataTable = this.onClickToBindDataTable.bind(this)\n        this.convertRangeType = this.convertRangeType.bind(this)\n        this.logout = this.logout.bind(this)\n        this.loadAllRoomsFromDB = this.loadAllRoomsFromDB.bind(this)\n        this.loadDefaultDataToTable = this.loadDefaultDataToTable.bind(this)\n        this.updateDataClicked = this.updateDataClicked.bind(this)\n        this.deleteDataClicked = this.deleteDataClicked.bind(this)\n        this.insertDataClicked = this.insertDataClicked.bind(this)\n        this.onClickStartDate = this.onClickStartDate.bind(this);\n        this.onSubmitByDate = this.onSubmitByDate.bind(this);\n        this.onClickNumberRecord = this.onClickNumberRecord.bind(this)\n        this.onClickPrevious = this.onClickPrevious.bind(this)\n        this.onClickNext = this.onClickNext.bind(this)\n    }\n\n    componentWillMount()\n    {\n        let username = sessionStorage.getItem(\"username\");\n        this.setState({username: username})\n    }\n\n    componentDidMount() {\n        this.loadAllRoomsFromDB()\n        this.loadDefaultDataToTable()\n    }\n\n    loadAllRoomsFromDB(){\n        KPIRoomService.getAllRooms()\n            .then(\n                response => {\n                    this.setState({rooms : response.data})\n                }\n            )\n    }\n\n    loadDefaultDataToTable(){\n        KPIValueService.getArrayToPaging(\n            3 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            sessionStorage.getItem(\"numrecord\") +\"\",\n            sessionStorage.getItem(\"pagecurrent\") +\"\")\n            .then(\n                response => {\n                    this.setState({KPIValue : response.data})\n                }\n            )\n    }\n\n    logout(){\n        sessionStorage.removeItem(\"username\");\n        sessionStorage.removeItem(\"room_id\");\n        sessionStorage.removeItem(\"category_id\");\n        sessionStorage.removeItem(\"numrecord\");\n        sessionStorage.removeItem(\"pagecurrent\");\n        sessionStorage.removeItem(\"private_user_name\");\n        this.props.history.push(`/`)\n    }\n\n    onClickRoom(e){\n        this.setState({room_id: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"room_id\", this.state.room_id);\n            KPICateService.getAllKPICate(sessionStorage.getItem(\"room_id\") + \"\")\n                .then(\n                    response => {\n                        this.setState({KPICate : response.data})\n                    }\n                )\n        });\n    }\n\n    onClickNumberRecord(e){\n        this.setState({numrecord: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"numrecord\", this.state.numrecord);\n            KPIValueService.getArrayToPaging(\n                3 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") +\"\",\n                sessionStorage.getItem(\"pagecurrent\") +\"\")\n                .then(\n                    response => {\n                        this.setState({KPIValue : response.data})\n                    }\n                )\n            KPIValueService.getNumberPage(\n                3 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") + \"\")\n                .then(\n                    response => {\n                        this.setState({numpage : (response.data - 1)})\n                    }\n                )\n        });\n    }\n\n    onClickPrevious(){\n        let page = this.state.pagecurrent\n        if(page === 1){\n            sessionStorage.setItem(\"pagecurrent\", 1 + \"\")\n        }else {\n            sessionStorage.setItem(\"pagecurrent\", (page - 1) + \"\")\n            this.setState({pagecurrent: (page - 1)})\n        }\n        KPIValueService.getArrayToPaging(\n            3+\"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            sessionStorage.getItem(\"numrecord\") +\"\",\n            sessionStorage.getItem(\"pagecurrent\") +\"\")\n            .then(\n                response => {\n                    this.setState({KPIValue : response.data})\n                }\n            )\n    }\n\n    onClickNext() {\n        let page = this.state.pagecurrent\n        if (page > this.state.numpage) {\n            sessionStorage.setItem(\"pagecurrent\", (this.state.numpage + 1) + \"\")\n        } else {\n            sessionStorage.setItem(\"pagecurrent\", (page + 1) + \"\")\n            this.setState({pagecurrent: (page + 1)})\n        }\n        KPIValueService.getArrayToPaging(\n            3 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            sessionStorage.getItem(\"numrecord\") + \"\",\n            sessionStorage.getItem(\"pagecurrent\") + \"\")\n            .then(\n                response => {\n                    this.setState({KPIValue: response.data})\n                }\n            )\n    }\n\n    convertRangeType(type){\n        if(type == 1){\n            return \"Daily\";\n        }if(type == 2){\n            return \"Weekly\";\n        }if(type == 3){\n            return \"Monthly\";\n        }if(type == 4){\n            return \"Quarterly\";\n        }if(type == 5){\n            return \"Annually\";\n        }\n    }\n\n    onClickToBindDataTable(e){\n        this.setState({category_id: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"category_id\", this.state.category_id);\n            KPIValueService.getArrayToPaging(\n                3 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") +\"\",\n                sessionStorage.getItem(\"pagecurrent\") +\"\")\n                .then(\n                    response => {\n                        this.setState({KPIValue : response.data})\n                    }\n                )\n            KPIValueService.getNumberPage(\n                3 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") + \"\")\n                .then(\n                    response => {\n                        this.setState({numpage : (response.data - 1)})\n                    }\n                )\n        });\n    }\n\n    deleteDataClicked(kpi_id, start_date, range_type, component_type){\n         KPIValueService.deleteData(kpi_id, start_date, range_type, component_type)\n            .then(\n                 response => {\n                     this.setState({message: `You deleted data successfully !`})\n                     KPIValueService.getArrayToPaging(\n                         3 + \"\",\n                         sessionStorage.getItem(\"category_id\") + \"\",\n                         sessionStorage.getItem(\"numrecord\") +\"\",\n                         sessionStorage.getItem(\"pagecurrent\") +\"\"\n                         )\n                         .then(\n                             response => {\n                                 this.setState({KPIValue : response.data})\n                             }\n                         )\n                }\n            )\n    }\n\n    updateDataClicked(kpi_id, start_date, range_type, component_type){\n        this.props.history.push(`kpivalues/${kpi_id}/${start_date}/${range_type}/${component_type}`)\n    }\n\n    insertDataClicked(){\n        sessionStorage.setItem(\"category_id\", sessionStorage.getItem(\"category_id\"));\n        sessionStorage.setItem(\"room_id\", sessionStorage.getItem(\"room_id\"));\n        KPICateService.getKPICateById(sessionStorage.getItem(\"category_id\") + \"\")\n            .then(\n                response => {\n                    sessionStorage.setItem(\"category_id\", response.data)\n                }\n            )\n        this.props.history.push(`kpivalues/add`)\n    }\n\n    onClickStartDate(e){\n        this.setState({start_date: e.target.value, message: ''}, function () {\n        });\n    }\n\n    onSubmitByDate(e){\n        KPIValueService.getAllKPIValueByDate(\n            3 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            this.state.start_date+ \"\")\n            .then(\n                response => {\n                    this.setState({KPIValue : response.data})\n                }\n            )\n        console.log(this.state.start_date)\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"menu-side-bar\">\n                    <div className=\"image\">\n                        <img src={logo} className=\"App-logo-custom\" alt=\"logo\"/>\n                    </div>\n                    <Link to={'/home'}>\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\n                    </Link>\n                    <Link to={'/hoachtoan'}>\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\n                    </Link>\n                    <Link to={'/listkpi'}>\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\n                    </Link>\n                </div>\n                <div className=\"content\">\n                    <div className=\"combobox-line\">\n                        <label className=\"label\">Room:</label>\n                        <select className=\"combobox\" onClick={this.onClickRoom}>\n                            <option disabled selected value={sessionStorage.getItem(\"room_id\")}>Choose the Room</option>\n                            {\n                                this.state.rooms.map((data) =>\n                                    <option value={data.id}>{data.name}</option>\n                                )\n                            }\n                        </select>\n                        <label className=\"label\">KPI Category:</label>\n                        <select className=\"combobox-kpi\" onClick={this.onClickToBindDataTable}>\n                            <option disabled selected value={sessionStorage.getItem(\"category_id\")}>Choose the Category</option>\n                            {\n                                this.state.KPICate.map((data) =>\n                                    <option value={data.category_id}>{data.name}</option>\n                                )\n                            }\n                        </select>\n                        <span className=\"logout\">Hello {this.state.username} <button onClick={this.logout}>Logout</button></span>\n                    </div>\n                    <div className=\"content-homepage\">\n                        <h2 className=\"tab\">⮞ Số Kế Hoạch</h2>\n                        <Formik initialValues={{}} onSubmit={this.onSubmitByDate} validateOnchange={false} validateOnBlur={false}\n                                enableReinitialize={true}>\n                            {\n                                (props) => (\n                                    <Form className=\"form-search\">\n                                        <fieldset className=\"form-group-search\">\n                                            Choose date:<Field\n                                            onChange={ (e) => this.onClickStartDate(e)} value = {this.state.start_date}\n                                            className=\"form-control-search\" type=\"date\" name=\"date\"/>\n                                        </fieldset>\n                                        <button className=\"btn-search\" type=\"submit\">Search</button>\n                                    </Form>\n                                )\n                            }\n                        </Formik>\n                        <h1 className=\"title\">Data Phòng {sessionStorage.getItem(\"room_id\")} -\n                            {sessionStorage.getItem(\"category_id\")}</h1>\n                        <label className=\"label-record\">Number records: </label>\n                        <select className=\"combobox-record\" onClick={this.onClickNumberRecord}>\n                            <option value=\"10\">10</option>\n                            <option value=\"15\">15</option>\n                            <option value=\"20\">20</option>\n                            <option value=\"25\">25</option>\n                        </select>\n                        <button className=\"btncontrol\" onClick={() => this.onClickPrevious()}>ᐊ</button>\n                        <input className=\"page-current\" type=\"text\" value={sessionStorage.getItem(\"pagecurrent\")}/>\n                        <button className=\"btncontrol-next\" onClick={() => this.onClickNext()}>ᐅ</button>\n                        <table className=\"table\">\n                            <thead>\n                            <tr>\n                                <th className=\"id_column\" style={{width: 1}}>ID</th>\n                                <th style={{width: 100}}>Room Name</th>\n                                <th style={{width: 240}}>Category Name</th>\n                                <th style={{width: 120}}>Value</th>\n                                <th style={{width: 50}}>Unit</th>\n                                <th style={{width: 100}}>Start date</th>\n                                <th style={{width: 100}}>Cycle type</th>\n                                <th colSpan=\"2\" style={{width: 80}}>Action</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                this.state.KPIValue.map(\n                                    data =>\n                                        <tr key={data.value_id}>\n                                            <td className=\"id_column\" style={{paddingLeft: 1}}>{data.id}</td>\n                                            <td style={{paddingLeft: 3}}>P. {data.room_name}</td>\n                                            <td style={{paddingLeft: 5}}>{data.name}</td>\n                                            {/* toLocaleString() is build-in func to format number */}\n                                            <td>{data.value.toLocaleString()}</td>\n                                            <td style={{paddingLeft: 15}}>{data.unit}</td>\n                                            <td style={{paddingLeft: 15}}>{data.start_date}</td>\n                                            <td>{this.convertRangeType(data.range_type)}</td>\n                                            <td>\n                                                <button className=\"btnud\" onClick={() => this.updateDataClicked(\n                                                    data.id+\"\",\n                                                    data.start_date+\"\",\n                                                    data.range_type+\"\",\n                                                    3)}>↺\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btnud\" onClick={() => this.deleteDataClicked(\n                                                    data.id +\"\",\n                                                    data.start_date+\"\",\n                                                    data.range_type+\"\",\n                                                    3)}>X\n                                                </button>\n                                            </td>\n                                        </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                        {this.state.message && <div className=\"alert-success\">{this.state.message}</div>}\n                        <div>\n                            <button className=\"btn-add\" onClick={() => this.insertDataClicked()}>Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"footer\">\n                        Viettel Media, Inc.<br/><br/>\n                        + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\n                        + Tel: 024 6281 8818 <br/>\n                        + Copyright © 2021, Viettel Group\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default HomePage","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\LoginPage.jsx",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\EditForm.jsx",["103","104","105"],"import React, {Component} from \"react\";\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport KPIValueService from \"../Service/KPIValueService\";\nimport logo from \"./Image/logo.jpg\";\nimport {Link} from \"react-router-dom\";\n\nclass EditForm extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            kpi_id: this.props.match.params.kpi_id,\n            start_date: this.props.match.params.start_date,\n            range_type: this.props.match.params.range_type,\n            component_type: this.props.match.params.component_type,\n            kpi_component_id: '',\n            time_id: '',\n            value: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n        this.onChangeValue = this.onChangeValue.bind(this)\n    }\n\n    onSubmit(e){\n        let data = {\n            kpi_component_id: this.state.kpi_component_id,\n            value: this.state.value,\n            time_id: this.state.time_id\n        }\n        KPIValueService.editData(\n            data,\n            this.state.kpi_id + \"\",\n            3 + \"\")\n            .then(() => this.props.history.push('/home'))\n        e.preventDefault();\n    }\n\n    onChangeValue(e){\n        this.setState({value: e.target.value, message: ''}, function () {\n        });\n    }\n\n    validate(values){\n        let error = {}\n        if(values.value == null || !values.value.match(\"^[0-9]*$\")){\n            error.value = 'Please enter a number, not special characters !'\n        }\n        return error\n    }\n\n    componentDidMount() {\n        KPIValueService.getSpecificData(\n            this.state.kpi_id + \"\",\n            this.state.start_date + \"\",\n            this.state.range_type + \"\",\n            3 + \"\")\n            .then(\n                response => this.setState(\n                    {\n                        value: response.data.value,\n                        time_id: response.data.time_id,\n                        kpi_component_id: response.data.kpi_component_id\n                    }\n                )\n            )\n    }\n\n    backToHome(){\n        this.props.history.push(`/home`)\n    }\n\n    render() {\n        let { kpi_id, start_date, range_type, value} = this.state\n        return(\n            <div className=\"container\">\n                <div className=\"menu-side-bar\">\n                    <div className=\"image\">\n                        <Link to = {'/home'}>\n                            <img src={logo} className=\"App-logo-custom\" alt=\"logo\" />\n                        </Link>\n                    </div>\n                    <Link to={'/home'}>\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\n                    </Link>\n                    <Link to={'/hoachtoan'}>\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\n                    </Link>\n                    <Link to={'/listkpi'}>\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\n                    </Link>\n                </div>\n                <div className=\"content\">\n                <h3>Edit Data</h3>\n                <h2 className=\"tab\">⮞ Số Kế Hoạch</h2>\n                <div className=\"containers-edit\">\n                    <Formik initialValues={{kpi_id, start_date, value, range_type}}\n                            validateOnchange = {true} validateOnBlur = {true}\n                            validate = {this.validate} enableReinitialize={true}>\n                        {\n                            (props) => (\n                                <Form onSubmit = {this.onSubmit}\n                                      validateOnchange = {true}\n                                      validate = {this.validate}>\n                                    <fieldset className=\"form-group-edit\">\n                                        <label>KPI Category: </label>\n                                        <Field disabled className = \"form-control-label\" type=\"text\" name = \"kpi_id\"/>\n                                    </fieldset>\n                                    <ErrorMessage name=\"value\" component=\"div\" className=\"alert-error\" />\n                                    <fieldset className=\"form-group-edit\">\n                                        <label>Enter New KPI Value: </label><br/>\n                                        <Field className = \"form-control-edit\" type=\"text\" name = \"value\"\n                                               onChange={(e) => this.onChangeValue(e)}  value = {this.state.value}/>\n                                    </fieldset>\n                                    <button onClick={() => this.backToHome()} className=\"btn-edit\" type=\"submit\">Cancel</button>\n                                    <button className=\"btn-edit\" type=\"submit\">Confirm</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n                <div className=\"footer\">\n                    Viettel Media, Inc.<br/><br/>\n                    + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\n                    + Tel: 024 6281 8818 <br/>\n                    + Copyright © 2021, Viettel Group\n                </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default EditForm","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HoachToanComponent\\HoachToanAddForm.jsx",["106","107","108"],"import React, {Component} from \"react\";\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\nimport logo from '../KPIComponent/Image/logo.jpg'\nimport KPIValueService from \"../../Service/KPIValueService\";\nimport {Link} from \"react-router-dom\";\nimport KPICateService from \"../../Service/KPICateService\";\nimport ComponentService from \"../../Service/KPIComponentService\";\n\nclass HoachToanAddForm extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            KPI_Category:[],\n            kpi_component_id: '',\n            kpi_name: '',\n            value: '',\n            kpi_id: '',\n            start_date: '',\n            range_type: '',\n            time_id: '',\n            insert_time: '',\n            fileData: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onSubmitFile = this.onSubmitFile.bind(this)\n        this.validate = this.validate.bind(this)\n        this.onClickComponent = this.onClickComponent.bind(this)\n        this.onClickTimeRange = this.onClickTimeRange.bind(this)\n        this.onClickStartDate = this.onClickStartDate.bind(this)\n        this.onChangeValue = this.onChangeValue.bind(this)\n        this._handleFileChange = this._handleFileChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadAllKPI_IDFromDB()\n    }\n\n    loadAllKPI_IDFromDB(){\n        KPICateService.getAllKPICate(sessionStorage.getItem(\"room_id\") + \"\")\n            .then(\n                response => {\n                    this.setState({KPI_Category : response.data})\n                }\n            )\n    }\n\n    onClickComponent(e){\n        this.setState({kpi_id: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"category_id\", this.state.kpi_id);\n            ComponentService.getKPIComponentId(\n                sessionStorage.getItem(\"category_id\") + \"\" ,\n                3 + \"\")\n                .then(\n                    response => {\n                        this.setState({kpi_component_id : response.data})\n                    }\n                )\n        });\n    }\n\n    onClickStartDate(e){\n        this.setState({start_date: e.target.value, message: ''}, function () {\n        });\n    }\n    onChangeValue(e){\n        this.setState({value: e.target.value, message: ''}, function () {\n        });\n    }\n    onClickTimeRange(e){\n        this.setState({range_type: e.target.value, message: ''}, function () {\n            ComponentService.getKPIComponentId(\n                sessionStorage.getItem(\"category_id\") + \"\" ,\n                2 + \"\")\n                .then(\n                    response => {\n                        this.setState({kpi_component_id : response.data})\n                    }\n                )\n        });\n    }\n\n    onSubmit(e){\n        let data = {\n            kpi_component_id: this.state.kpi_component_id,\n            value: this.state.value,\n        }\n        KPIValueService.insertData(\n            data,\n            this.state.start_date + \"\",\n            this.state.range_type + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            2 + \"\")\n            .then(() => this.props.history.push('/hoachtoan'))\n        e.preventDefault();\n    }\n\n    onSubmitFile(e){\n        e.preventDefault();\n        let url = `http://localhost:9091/api/upload`;\n        let formData = new FormData()\n        formData.append('file', this.state.fileData[0]);\n        fetch(url, {\n            method: 'post',\n            headers: {\n                'start_date' : this.state.start_date,\n                'range_type' : this.state.range_type,\n                'component_type' : 2\n            },\n            body: formData\n        }).then(r => this.props.history.push('/hoachtoan'));\n    }\n\n    validate(values){\n        let error = {}\n        if(values.value == null || !values.value.match(\"^[0-9]*$\")){\n            error.value = 'Please enter a number, not special characters !'\n        }\n        return error\n    }\n\n    backToHome(){\n        this.props.history.push(`/hoachtoan`)\n    }\n\n    _handleFileChange(e){\n        this.setState({fileData: e.target.files})\n        if (e.target.files && e.target.files[0]) {\n        }\n        e.preventDefault();\n    }\n\n    render() {\n        let {time_id, value, kpi_component_id} = this.state\n        return(\n            <div className=\"containers\">\n                <div className=\"menu-side-bar\">\n                    <div className=\"image\">\n                        <Link to = {'/hoachtoan'}>\n                            <img src={logo} className=\"App-logo-custom\" alt=\"logo\" />\n                        </Link>\n                    </div>\n                    <Link to={'/home'}>\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\n                    </Link>\n                    <Link to={'/hoachtoan'}>\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\n                    </Link>\n                    <Link to={'/listkpi'}>\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\n                    </Link>\n                </div>\n                <div className=\"content\">\n                    <h3>Create Form</h3>\n                    <h2 className=\"tab\">⮞ Số Chốt</h2>\n                <Formik initialValues={{kpi_component_id, value, time_id}}\n                        validateOnchange = {true} validateOnBlur = {true}\n                        validate = {this.validate} enableReinitialize={true}>\n                    {\n                        (props) => (\n                            <div>\n                                <Form onSubmit = {this.onSubmit} validateOnchange = {true} validate = {this.validate}>\n                                    <label className=\"label_combobox-add\">Category:</label>\n                                    <select className=\"combobox-add\" onClick={this.onClickComponent}>\n                                        <option disabled selected value={sessionStorage.getItem(\"category_id\")}>\n                                            {sessionStorage.getItem(\"category_id\")}</option>\n                                        {\n                                            this.state.KPI_Category.map((data) =>\n                                                <option value={data.category_id}>{data.name}</option>\n                                            )\n                                        }\n                                    </select>\n                                    <br/>\n                                    <label className=\"label_combobox-add\">Time Range:</label>\n                                    <select className=\"combobox-add\" onChange={(e) => this.onClickTimeRange(e)} required>\n                                        <option value=\"\" disabled selected>Choose the time range</option>\n                                        <option value=\"1\">1-Daily</option>\n                                        <option value=\"2\">2-Weekly</option>\n                                        <option value=\"3\">3-Monthly</option>\n                                        <option value=\"4\">4-Quarterly</option>\n                                        <option value=\"5\">5-Annually</option>\n                                    </select>\n                                    <fieldset className=\"form-group-edit\">\n                                        <label className=\"title-add\">Start Date:</label><br/>\n                                        <Field className = \"form-control-edit\" placeholder=\"Enter time format yyyy-mm-dd\"\n                                               onChange={this.onClickStartDate}  value = {this.state.start_date}\n                                               type=\"date\" name = \"start_date\" required/>\n                                    </fieldset>\n                                    <ErrorMessage name=\"value\" component=\"div\" className=\"alert-error\" />\n                                    <fieldset className=\"form-group-edit\">\n                                        <label className=\"title-add\">Value:</label><br/>\n                                        <Field className = \"form-control-edit\" placeholder=\"Enter an exactly floating number\"\n                                               onChange={(e) => this.onChangeValue(e)}  value = {this.state.value}\n                                               type=\"text\" name = \"value\" required/>\n                                    </fieldset>\n                                    <button onClick={() => this.backToHome()} className=\"btn-addnew\" type=\"submit\">Cancel</button>\n                                    <button className=\"btn-addnew\" type=\"submit\">Add New</button>\n                                </Form>\n                                <Form className=\"form-file\" onSubmit = {this.onSubmitFile} enctype=\"multipart/form-data\">\n                                    <fieldset className=\"form-group-edit\">\n                                        <label className=\"title-add\">Choose file to upload: </label><br/><br/>\n                                        <input type=\"file\" className=\"file\" onChange={(e )=>this._handleFileChange(e)}/>\n                                    </fieldset>\n                                    <button className=\"btn-submit\" type=\"submit\">Submit File</button>\n                                </Form>\n                            </div>\n                        )\n                    }\n                </Formik>\n                <div className=\"footer\">\n                    Viettel Media, Inc.<br/><br/>\n                    + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\n                    + Tel: 024 6281 8818 <br/>\n                    + Copyright © 2021, Viettel Group\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nexport default HoachToanAddForm","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\AddForm.jsx",["109","110","111"],"import React, {Component} from \"react\";\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\nimport KPIValueService from \"../Service/KPIValueService\";\nimport ComponentService from \"../Service/KPIComponentService\";\nimport logo from \"./Image/logo.jpg\";\nimport {Link} from \"react-router-dom\";\nimport KPICateService from \"../Service/KPICateService\";\n\nclass AddForm extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            KPI_Category:[],\n            kpi_component_id: '',\n            kpi_name: '',\n            value: '',\n            kpi_id: '',\n            start_date: '',\n            range_type: '',\n            time_id: '',\n            insert_time: '',\n            fileData: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onSubmitFile = this.onSubmitFile.bind(this)\n        this.validate = this.validate.bind(this)\n        this.onClickComponent = this.onClickComponent.bind(this)\n        this.onClickTimeRange = this.onClickTimeRange.bind(this)\n        this.onClickStartDate = this.onClickStartDate.bind(this)\n        this.onChangeValue = this.onChangeValue.bind(this)\n        this._handleImageChange = this._handleImageChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadAllKPI_IDFromDB()\n    }\n\n    loadAllKPI_IDFromDB(){\n        KPICateService.getAllKPICate(sessionStorage.getItem(\"room_id\") + \"\")\n            .then(\n                response => {\n                    this.setState({KPI_Category : response.data})\n                }\n            )\n    }\n\n    onClickComponent(e){\n        this.setState({kpi_id: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"category_id\", this.state.kpi_id);\n            ComponentService.getKPIComponentId(\n                sessionStorage.getItem(\"category_id\") + \"\" ,\n                3 + \"\")\n                .then(\n                    response => {\n                        this.setState({kpi_component_id : response.data})\n                    }\n                )\n        });\n    }\n\n    onClickStartDate(e){\n        this.setState({start_date: e.target.value, message: ''}, function () {\n        });\n    }\n    onChangeValue(e){\n        this.setState({value: e.target.value, message: ''}, function () {\n        });\n    }\n    onClickTimeRange(e){\n        this.setState({range_type: e.target.value, message: ''}, function () {\n            ComponentService.getKPIComponentId(\n                sessionStorage.getItem(\"category_id\") + \"\" ,\n                3 + \"\")\n                .then(\n                    response => {\n                        this.setState({kpi_component_id : response.data})\n                    }\n                )\n        });\n    }\n\n    onSubmit(e){\n        let data = {\n            kpi_component_id: this.state.kpi_component_id,\n            value: this.state.value,\n        }\n        KPIValueService.insertData(\n            data,\n            this.state.start_date + \"\",\n            this.state.range_type + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            3 + \"\")\n            .then(() => this.props.history.push('/home'))\n        e.preventDefault();\n    }\n\n    onSubmitFile(e){\n        e.preventDefault();\n        let url = `http://localhost:9091/api/upload`;\n        let formData = new FormData()\n        formData.append('file', this.state.fileData[0]);\n        fetch(url, {\n            method: 'post',\n            headers: {\n                'start_date' : this.state.start_date,\n                'range_type' : this.state.range_type,\n                'component_type' : 3\n            },\n            body: formData\n        }).then(r => this.props.history.push('/home'));\n    }\n\n    validate(values){\n        let error = {}\n        if(values.value == null || !values.value.match(\"^[0-9]*$\")){\n            error.value = 'Please enter a number, not special characters !'\n        }\n        return error\n    }\n\n    backToHome(){\n        this.props.history.push(`/home`)\n    }\n\n    _handleImageChange(e){\n        this.setState({fileData: e.target.files})\n        if (e.target.files && e.target.files[0]) {\n        }\n        e.preventDefault();\n    }\n\n    render() {\n        let {time_id, value, kpi_component_id} = this.state\n        return(\n            <div className=\"container\">\n                <div className=\"menu-side-bar\">\n                    <div className=\"image\">\n                        <Link to = {'/home'}>\n                            <img src={logo} className=\"App-logo-custom\" alt=\"logo\" />\n                        </Link>\n                    </div>\n                    <Link to={'/home'}>\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\n                    </Link>\n                    <Link to={'/hoachtoan'}>\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\n                    </Link>\n                    <Link to={'/listkpi'}>\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\n                    </Link>\n                </div>\n                <div className=\"content\">\n                    <h3>Create Form</h3>\n                    <h2 className=\"tab\">⮞ Số Kế Hoạch</h2>\n                <Formik initialValues={{kpi_component_id, value, time_id}}\n                        validateOnchange = {true} validateOnBlur = {true}\n                        validate = {this.validate} enableReinitialize={true}>\n                    {\n                        (props) => (\n                            <div>\n                            <Form onSubmit = {this.onSubmit}\n                                  validateOnchange = {true}\n                                  validate = {this.validate}>\n                                <label className=\"label_combobox-add\">Category:</label>\n                                <select className=\"combobox-add\" onClick={this.onClickComponent}>\n                                    <option disabled selected value={sessionStorage.getItem(\"category_id\")}>\n                                        {sessionStorage.getItem(\"category_id\")}</option>\n                                    {\n                                        this.state.KPI_Category.map((data) =>\n                                            <option value={data.category_id}>{data.name}</option>\n                                        )\n                                    }\n                                </select>\n                                <br/>\n                                <label className=\"label_combobox-add\">Time Range:</label>\n                                <select className=\"combobox-add\" onChange={(e) => this.onClickTimeRange(e)} required>\n                                    <option value=\"\" disabled selected>Choose the time range</option>\n                                    <option value=\"1\">1-Daily</option>\n                                    <option value=\"2\">2-Weekly</option>\n                                    <option value=\"3\">3-Monthly</option>\n                                    <option value=\"4\">4-Quarterly</option>\n                                    <option value=\"5\">5-Annually</option>\n                                </select>\n                                <fieldset className=\"form-group-edit\">\n                                    <label className=\"title-add\">Start Date:</label><br/>\n                                    <Field className = \"form-control-edit\" placeholder=\"Enter time format yyyy-mm-dd\"\n                                           onChange={this.onClickStartDate}  value = {this.state.start_date}\n                                           type=\"date\" name = \"start_date\" required/>\n                                </fieldset>\n                                <ErrorMessage name=\"value\" component=\"div\" className=\"alert-error\" />\n                                <fieldset className=\"form-group-edit\">\n                                    <label className=\"title-add\">Value:</label><br/>\n                                    <Field className = \"form-control-edit\" placeholder=\"Enter an exactly floating number\"\n                                           onChange={(e) => this.onChangeValue(e)}  value = {this.state.value}\n                                           type=\"text\" name = \"value\" required/>\n                                </fieldset>\n                                <button onClick={() => this.backToHome()} className=\"btn-addnew\" type=\"submit\">Cancel</button>\n                                <button className=\"btn-addnew\" type=\"submit\">Add New</button>\n                            </Form>\n                            <Form className=\"form-file\" onSubmit = {this.onSubmitFile} enctype=\"multipart/form-data\">\n                                <fieldset className=\"form-group-edit\">\n                                    <label className=\"title-add\">Choose file to upload: </label><br/><br/>\n                                    <input type=\"file\" className=\"file\" onChange={(e )=>this._handleImageChange(e)}/>\n                                </fieldset>\n                                <button className=\"btn-submit\" type=\"submit\">Submit File</button>\n                            </Form>\n                            </div>\n                        )\n                    }\n                </Formik>\n                <div className=\"footer\">\n                    Viettel Media, Inc.<br/><br/>\n                    + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\n                    + Tel: 024 6281 8818 <br/>\n                    + Copyright © 2021, Viettel Group\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n}\n\nexport default AddForm","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HoachToanComponent\\HoachToanHomePage.jsx",["112","113","114","115","116","117","118","119"],"import React, {Component} from \"react\";\nimport logo from '../KPIComponent/Image/logo.jpg'\nimport {Field, Form, Formik} from \"formik\";\nimport {Link} from \"react-router-dom\";\nimport KPIValueService from \"../../Service/KPIValueService\";\nimport RoomService from \"../../Service/KPIRoomService\";\nimport KPICateService from \"../../Service/KPICateService\";\n\nclass HoachToanHomePage extends Component{\n\n    // constructor\n    constructor(props) {\n        super(props);\n        this.state ={\n            rooms: [],\n            KPICate:[],\n            KPIValue: [],\n            room_id: '',\n            numrecord: '',\n            pagecurrent: 1,\n            numpage: 1,\n            Message: null,\n            component_type: '',\n            category_id: ''\n        }\n        this.onClickRoom = this.onClickRoom.bind(this)\n        this.onClickToBindDataTable = this.onClickToBindDataTable.bind(this)\n        this.convertRangeType = this.convertRangeType.bind(this)\n        this.logout = this.logout.bind(this)\n        this.loadAllRoomsFromDB = this.loadAllRoomsFromDB.bind(this)\n        this.loadDefaultDataToTable = this.loadDefaultDataToTable.bind(this)\n        this.updateDataClicked = this.updateDataClicked.bind(this)\n        this.deleteDataClicked = this.deleteDataClicked.bind(this)\n        this.insertDataClicked = this.insertDataClicked.bind(this)\n        this.onClickStartDate = this.onClickStartDate.bind(this);\n        this.onSubmitByDate = this.onSubmitByDate.bind(this);\n        this.onClickNumberRecord = this.onClickNumberRecord.bind(this)\n        this.onClickPrevious = this.onClickPrevious.bind(this)\n        this.onClickNext = this.onClickNext.bind(this)\n    }\n\n    componentWillMount()\n    {\n        let username = sessionStorage.getItem(\"username\");\n        this.setState({username: username})\n    }\n\n    componentDidMount() {\n        this.loadAllRoomsFromDB()\n        this.loadDefaultDataToTable()\n    }\n\n    loadAllRoomsFromDB(){\n        RoomService.getAllRooms()\n            .then(\n                response => {\n                    this.setState({rooms : response.data})\n                }\n            )\n    }\n\n    loadDefaultDataToTable(){\n        KPIValueService.getArrayToPaging(\n            2 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            sessionStorage.getItem(\"numrecord\") +\"\",\n            sessionStorage.getItem(\"pagecurrent\") +\"\")\n            .then(\n                response => {\n                    this.setState({KPIValue : response.data})\n                }\n            )\n    }\n\n    logout(){\n        sessionStorage.removeItem(\"username\");\n        sessionStorage.removeItem(\"room_id\");\n        sessionStorage.removeItem(\"category_id\");\n        sessionStorage.removeItem(\"numrecord\");\n        sessionStorage.removeItem(\"pagecurrent\");\n        sessionStorage.removeItem(\"private_user_name\");\n        this.props.history.push(`/`)\n    }\n\n    onClickRoom(e){\n        this.setState({room_id: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"room_id\", this.state.room_id);\n            KPICateService.getAllKPICate(sessionStorage.getItem(\"room_id\") + \"\")\n                .then(\n                    response => {\n                        this.setState({KPICate : response.data})\n                    }\n                )\n        });\n    }\n\n    onClickNumberRecord(e){\n        this.setState({numrecord: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"numrecord\", this.state.numrecord);\n            KPIValueService.getArrayToPaging(\n                2 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") +\"\",\n                sessionStorage.getItem(\"pagecurrent\") +\"\")\n                .then(\n                    response => {\n                        this.setState({KPIValue : response.data})\n                    }\n                )\n            KPIValueService.getNumberPage(\n                2 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") + \"\")\n                .then(\n                    response => {\n                        this.setState({numpage : (response.data-1)})\n                    }\n                )\n        });\n    }\n\n    onClickPrevious(){\n        let page = this.state.pagecurrent\n        if(page === 1){\n            sessionStorage.setItem(\"pagecurrent\", 1 + \"\")\n        }else {\n            sessionStorage.setItem(\"pagecurrent\", (page - 1) + \"\")\n            this.setState({pagecurrent: (page - 1)})\n        }\n        KPIValueService.getArrayToPaging(\n            2 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            sessionStorage.getItem(\"numrecord\") +\"\",\n            sessionStorage.getItem(\"pagecurrent\") +\"\")\n            .then(\n                response => {\n                    this.setState({KPIValue : response.data})\n                }\n            )\n    }\n\n    onClickNext() {\n        let page = this.state.pagecurrent\n        if (page > this.state.numpage) {\n            sessionStorage.setItem(\"pagecurrent\", (this.state.numpage + 1) + \"\")\n        } else {\n            sessionStorage.setItem(\"pagecurrent\", (page + 1) + \"\")\n            this.setState({pagecurrent: (page + 1)})\n        }\n        KPIValueService.getArrayToPaging(\n            2 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            sessionStorage.getItem(\"numrecord\") + \"\",\n            sessionStorage.getItem(\"pagecurrent\") + \"\")\n            .then(\n                response => {\n                    this.setState({KPIValue: response.data})\n                }\n            )\n    }\n\n    convertRangeType(type){\n        if(type == 1){\n            return \"Daily\";\n        }if(type == 2){\n            return \"Weekly\";\n        }if(type == 3){\n            return \"Monthly\";\n        }if(type == 4){\n            return \"Quarterly\";\n        }if(type == 5){\n            return \"Annually\";\n        }\n    }\n\n    onClickToBindDataTable(e){\n        this.setState({category_id: e.target.value, message: ''}, function () {\n            sessionStorage.setItem(\"category_id\", this.state.category_id);\n            KPIValueService.getArrayToPaging(\n                2 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") +\"\",\n                sessionStorage.getItem(\"pagecurrent\") +\"\")\n                .then(\n                    response => {\n                        this.setState({KPIValue : response.data})\n                    }\n                )\n            KPIValueService.getNumberPage(\n                2 + \"\",\n                sessionStorage.getItem(\"category_id\") + \"\",\n                sessionStorage.getItem(\"numrecord\") + \"\")\n                .then(\n                    response => {\n                        this.setState({numpage : (response.data - 1)})\n                    }\n                )\n        });\n    }\n\n    deleteDataClicked(kpi_id, start_date, range_type, component_type){\n        KPIValueService.deleteData(kpi_id, start_date, range_type, component_type)\n            .then(\n                response => {\n                    this.setState({message: `You deleted data successfully !`})\n                    KPIValueService.getArrayToPaging(\n                        2 + \"\",\n                        sessionStorage.getItem(\"category_id\") + \"\",\n                        sessionStorage.getItem(\"numrecord\") +\"\",\n                        sessionStorage.getItem(\"pagecurrent\") +\"\"\n                    )\n                        .then(\n                            response => {\n                                this.setState({KPIValue : response.data})\n                            }\n                        )\n                }\n            )\n    }\n\n    updateDataClicked(kpi_id, start_date, range_type, component_type){\n        this.props.history.push(`hoachtoanedit/${kpi_id}/${start_date}/${range_type}/${component_type}`)\n    }\n\n    insertDataClicked(){\n        sessionStorage.setItem(\"category_id\", sessionStorage.getItem(\"category_id\"));\n        sessionStorage.setItem(\"room_id\", sessionStorage.getItem(\"room_id\"));\n        KPICateService.getKPICateById(sessionStorage.getItem(\"category_id\") + \"\")\n            .then(\n                response => {\n                    sessionStorage.setItem(\"category_id\", response.data)\n                }\n            )\n        this.props.history.push(`hoachtoan/add`)\n    }\n\n    onClickStartDate(e){\n        this.setState({start_date: e.target.value, message: ''}, function () {\n        });\n    }\n\n    onSubmitByDate(e){\n        KPIValueService.getAllKPIValueByDate(\n            2 + \"\",\n            sessionStorage.getItem(\"category_id\") + \"\",\n            this.state.start_date+ \"\")\n            .then(\n                response => {\n                    this.setState({KPIValue : response.data})\n                }\n            )\n        console.log(this.state.start_date)\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"menu-side-bar\">\n                    <div className=\"image\">\n                        <img src={logo} className=\"App-logo-custom\" alt=\"logo\"/>\n                    </div>\n                    <Link to={'/home'}>\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\n                    </Link>\n                    <Link to={'/hoachtoan'}>\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\n                    </Link>\n                    <Link to={'#'}>\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\n                    </Link>\n                </div>\n                <div className=\"content\">\n                    <div className=\"combobox-line\">\n                        <label className=\"label\">Room:</label>\n                        <select className=\"combobox\" onClick={this.onClickRoom}>\n                            <option disabled selected value={sessionStorage.getItem(\"room_id\")}>Choose the Room</option>\n                            {\n                                this.state.rooms.map((data) =>\n                                    <option value={data.id}>{data.name}</option>\n                                )\n                            }\n                        </select>\n                        <label className=\"label\">KPI Category:</label>\n                        <select className=\"combobox-kpi\" onClick={this.onClickToBindDataTable}>\n                            <option disabled selected value={sessionStorage.getItem(\"category_id\")}>Choose the Category</option>\n                            {\n                                this.state.KPICate.map((data) =>\n                                    <option value={data.category_id}>{data.name}</option>\n                                )\n                            }\n                        </select>\n                        <span className=\"logout\">Hello {this.state.username} <button onClick={this.logout}>Logout</button></span>\n                    </div>\n                    <div className=\"content-homepage\">\n                        <h2 className=\"tab\">⮞ Số Chốt</h2>\n                        <Formik initialValues={{}} onSubmit={this.onSubmitByDate} validateOnchange={false} validateOnBlur={false}\n                                enableReinitialize={true}>\n                            {\n                                (props) => (\n                                    <Form className=\"form-search\">\n                                        <fieldset className=\"form-group-search\">\n                                            Choose date: <Field\n                                            onChange={ (e) => this.onClickStartDate(e)} value = {this.state.start_date}\n                                            className=\"form-control-search\" type=\"date\" name=\"date\"/>\n                                        </fieldset>\n                                        <button className=\"btn-search\" type=\"submit\">Search</button>\n                                    </Form>\n                                )\n                            }\n                        </Formik>\n                        <h1 className=\"title\">Data Phòng {sessionStorage.getItem(\"room_id\")} -\n                            {sessionStorage.getItem(\"category_id\")}</h1>\n                        <label className=\"label-record\">Number records: </label>\n                        <select className=\"combobox-record\" onClick={this.onClickNumberRecord}>\n                            <option value=\"10\">10</option>\n                            <option value=\"15\">15</option>\n                            <option value=\"20\">20</option>\n                            <option value=\"25\">25</option>\n                        </select>\n                        <button className=\"btncontrol\" onClick={() => this.onClickPrevious()}>ᐊ</button>\n                        <input className=\"page-current\" type=\"text\" value={sessionStorage.getItem(\"pagecurrent\")}/>\n                        <button className=\"btncontrol-next\" onClick={() => this.onClickNext()}>ᐅ</button>\n                        <table className=\"table\">\n                            <thead>\n                            <tr>\n                                <th className=\"id_column\" style={{width: 1}}>ID</th>\n                                <th style={{width: 100}}>Room Name</th>\n                                <th style={{width: 240}}>Category Name</th>\n                                <th style={{width: 120}}>Value</th>\n                                <th style={{width: 50}}>Unit</th>\n                                <th style={{width: 100}}>Start date</th>\n                                <th style={{width: 100}}>Cycle type</th>\n                                <th colSpan=\"2\" style={{width: 80}}>Action</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {\n                                this.state.KPIValue.map(\n                                    data =>\n                                        <tr key={data.value_id}>\n                                            <td className=\"id_column\" style={{paddingLeft: 1}}>{data.id}</td>\n                                            <td style={{paddingLeft: 3}}>P. {data.room_name}</td>\n                                            <td style={{paddingLeft: 5}}>{data.name}</td>\n                                            {/* toLocaleString() is build-in func to format number */}\n                                            <td>{data.value.toLocaleString()}</td>\n                                            <td style={{paddingLeft: 15}}>{data.unit}</td>\n                                            <td style={{paddingLeft: 15}}>{data.start_date}</td>\n                                            <td>{this.convertRangeType(data.range_type)}</td>\n                                            <td>\n                                                <button className=\"btnud\" onClick={() => this.updateDataClicked(data.id,\n                                                    data.start_date, data.range_type, 2)}>↺\n                                                </button>\n                                            </td>\n                                            <td>\n                                                <button className=\"btnud\" onClick={() => this.deleteDataClicked(data.id,\n                                                    data.start_date, data.range_type, 2)}>X\n                                                </button>\n                                            </td>\n                                        </tr>\n                                )\n                            }\n                            </tbody>\n                        </table>\n                        {this.state.message && <div className=\"alert-success\">{this.state.message}</div>}\n                        <div>\n                            <button className=\"btn-add\" onClick={() => this.insertDataClicked()}>Add New</button>\n                        </div>\n                    </div>\n                    <div className=\"footer\">\n                        Viettel Media, Inc.<br/><br/>\n                        + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\n                        + Tel: 024 6281 8818 <br/>\n                        + Copyright © 2021, Viettel Group\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default HoachToanHomePage","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\HoachToanComponent\\HoachToanEditForm.jsx",["120","121","122"],"import React, {Component} from \"react\";\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport logo from '../KPIComponent/Image/logo.jpg'\nimport KPIValueService from \"../../Service/KPIValueService\";\nimport {Link} from \"react-router-dom\";\n\nclass HoachToanEditForm extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            kpi_id: this.props.match.params.kpi_id,\n            start_date: this.props.match.params.start_date,\n            range_type: this.props.match.params.range_type,\n            component_type: this.props.match.params.component_type,\n            kpi_component_id: '',\n            time_id: '',\n            value: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n        this.onChangeValue = this.onChangeValue.bind(this)\n    }\n\n    onSubmit(e){\n        let data = {\n            kpi_component_id: this.state.kpi_component_id,\n            value: this.state.value,\n            time_id: this.state.time_id\n        }\n        KPIValueService.editData(\n            data,\n            this.state.kpi_id + \"\",\n            2 + \"\")\n            .then(() => this.props.history.push('/hoachtoan'))\n        e.preventDefault();\n    }\n\n    onChangeValue(e){\n        this.setState({value: e.target.value, message: ''}, function () {\n        });\n    }\n\n    validate(values){\n        let error = {}\n        if(values.value == null || !values.value.match(\"^[0-9]*$\")){\n            error.value = 'Please enter a number, not special characters !'\n        }\n        return error\n    }\n\n    componentDidMount() {\n        KPIValueService.getSpecificData(\n            this.state.kpi_id + \"\",\n            this.state.start_date + \"\",\n            this.state.range_type + \"\",\n            2 + \"\")\n            .then(\n                response => this.setState(\n                    {\n                        value: response.data.value,\n                        time_id: response.data.time_id,\n                        kpi_component_id: response.data.kpi_component_id\n                    }\n                )\n            )\n    }\n\n    backToHome(){\n        this.props.history.push(`/hoachtoan`)\n    }\n\n    render() {\n        let { kpi_id, start_date, range_type, value} = this.state\n        return(\n            <div className=\"container\">\n                <div className=\"menu-side-bar\">\n                    <div className=\"image\">\n                        <Link to = {'/hoachtoan'}>\n                            <img src={logo} className=\"App-logo-custom\" alt=\"logo\" />\n                        </Link>\n                    </div>\n                    <Link to={'/home'}>\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\n                    </Link>\n                    <Link to={'/hoachtoan'}>\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\n                    </Link>\n                    <Link to={'#'}>\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\n                    </Link>\n                </div>\n                <div className=\"content\">\n                <h3>Edit Data</h3>\n                <h2 className=\"tab\">⮞ Số Chốt</h2>\n                <div className=\"containers-edit\">\n                    <Formik initialValues={{kpi_id, start_date, value, range_type}}\n                            validateOnchange = {true} validateOnBlur = {true}\n                            validate = {this.validate} enableReinitialize={true}>\n                        {\n                            (props) => (\n                                <Form onSubmit = {this.onSubmit}\n                                      validateOnchange = {true}\n                                      validate = {this.validate}>\n                                    <fieldset className=\"form-group-edit\">\n                                        <label>KPI Category: </label>\n                                        <Field disabled className = \"form-control-label\" type=\"text\" name = \"kpi_id\"/>\n                                    </fieldset>\n                                    <ErrorMessage name=\"value\" component=\"div\" className=\"alert-error\" />\n                                    <fieldset className=\"form-group-edit\">\n                                        <label>Enter New KPI Value: </label><br/>\n                                        <Field className = \"form-control-edit\" type=\"text\" name = \"value\"\n                                               onChange={(e) => this.onChangeValue(e)}  value = {this.state.value}/>\n                                    </fieldset>\n                                    <button onClick={() => this.backToHome()} className=\"btn-edit\" type=\"submit\">Cancel</button>\n                                    <button className=\"btn-edit\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n                <div className=\"footer\">\n                    Viettel Media, Inc.<br/><br/>\n                    + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\n                    + Tel: 024 6281 8818 <br/>\n                    + Copyright © 2021, Viettel Group\n                </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default HoachToanEditForm","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIUserAuthService.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIValueService.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIRoomService.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPICateService.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Service\\KPIComponentService.js",[],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\KPIComponent\\ListKPI.jsx",["123","124","125","126","127","128"],"C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\KPIComponent\\EditKPI.jsx",["129","130","131","132"],"import React, {Component} from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport logo from \"./Image/logo.jpg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport KPICateService from \"../../Service/KPICateService\";\r\n\r\nclass EditKPI extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category_id: this.props.match.params.category_id,\r\n            name: '',\r\n            room_id: '',\r\n            unit: '',\r\n            desc: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChangeName = this.onChangeName.bind(this)\r\n        this.onChangeUnit = this.onChangeUnit.bind(this)\r\n        this.onChangeDesc = this.onChangeDesc.bind(this)\r\n    }\r\n\r\n    onSubmit(e){\r\n        let data = {\r\n            category_id: this.state.category_id,\r\n            name: this.state.name,\r\n            room_id: sessionStorage.getItem(\"room_id\"),\r\n            unit: this.state.unit,\r\n            desc: this.state.desc\r\n        }\r\n        console.log(this.state.category_id)\r\n        console.log(this.state.name)\r\n        console.log(this.state.unit)\r\n        console.log(this.state.desc)\r\n        KPICateService.updateCategory(data)\r\n            .then(() => this.props.history.push('/listkpi'))\r\n        e.preventDefault();\r\n    }\r\n\r\n    onChangeName(e){\r\n        this.setState({name: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n    onChangeUnit(e){\r\n        this.setState({unit: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n    onChangeDesc(e){\r\n        this.setState({desc: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        KPICateService.getSpecificCateById(\r\n            this.state.category_id + \"\")\r\n            .then(\r\n                response => this.setState(\r\n                    {\r\n                        name: response.data.name,\r\n                        unit: response.data.unit,\r\n                        desc: response.data.desc\r\n                    }\r\n                )\r\n            )\r\n    }\r\n\r\n    backToHome(){\r\n        this.props.history.push(`/listkpi`)\r\n    }\r\n\r\n    render() {\r\n        let { category_id, name, unit, desc} = this.state\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"menu-side-bar\">\r\n                    <div className=\"image\">\r\n                        <Link to = {'/home'}>\r\n                            <img src={logo} className=\"App-logo-custom\" alt=\"logo\" />\r\n                        </Link>\r\n                    </div>\r\n                    <Link to={'/home'}>\r\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\r\n                    </Link>\r\n                    <Link to={'/hoachtoan'}>\r\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\r\n                    </Link>\r\n                    <Link to={'/listkpi'}>\r\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h3>Edit Data</h3>\r\n                    <h2 className=\"tab\">⮞ Quản lý KPI</h2>\r\n                    <div className=\"containers-edit\">\r\n                        <Formik initialValues={{category_id, name, unit, desc}}\r\n                                validateOnchange = {true} validateOnBlur = {true}\r\n                                enableReinitialize={true}>\r\n                            {\r\n                                (props) => (\r\n                                    <Form onSubmit = {this.onSubmit}\r\n                                          validateOnchange = {true}>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label>KPI ID: </label>\r\n                                            <Field disabled className = \"form-control-label\" type=\"text\" name = \"category_id\"/>\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label>KPI Name: </label><br/>\r\n                                            <Field className = \"form-control-edit\" type=\"text\" name = \"name\"\r\n                                                   onChange={(e) => this.onChangeName(e)}  value = {this.state.name}/>\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label>Unit: </label><br/>\r\n                                            <Field className = \"form-control-edit\" type=\"text\" name = \"unit\"\r\n                                                   onChange={(e) => this.onChangeUnit(e)}  value = {this.state.unit}/>\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label>Description: </label><br/>\r\n                                            <textarea style={{height: 150}} className = \"form-control-edit\" type=\"text\" name = \"desc\"\r\n                                                   onChange={(e) => this.onChangeDesc(e)}  value = {this.state.desc}>zzz</textarea>\r\n                                        </fieldset>\r\n                                        <button onClick={() => this.backToHome()} className=\"btn-edit\" type=\"submit\">Cancel</button>\r\n                                        <button className=\"btn-edit\" type=\"submit\">Confirm</button>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                        </Formik>\r\n                    </div>\r\n                    <div className=\"footer\">\r\n                        Viettel Media, Inc.<br/><br/>\r\n                        + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\r\n                        + Tel: 024 6281 8818 <br/>\r\n                        + Copyright © 2021, Viettel Group\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default EditKPI","C:\\Users\\SonLN00\\Downloads\\dmos\\frontend\\src\\Component\\KPIComponent\\AddKPI.jsx",["133","134","135"],"import React, {Component} from \"react\";\r\nimport {Formik, Form, Field} from \"formik\";\r\nimport logo from \"./Image/logo.jpg\";\r\nimport {Link} from \"react-router-dom\";\r\nimport KPICateService from \"../../Service/KPICateService\";\r\nimport KPIRoomService from \"../../Service/KPIRoomService\";\r\n\r\nclass AddKPI extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rooms:[],\r\n            name: '',\r\n            room_id: '',\r\n            unit: '',\r\n            category_id: '',\r\n            desc: ''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChangeId = this.onChangeId.bind(this)\r\n        this.onChangeName = this.onChangeName.bind(this)\r\n        this.onChangeUnit = this.onChangeUnit.bind(this)\r\n        this.onChangeDesc = this.onChangeDesc.bind(this)\r\n        this.loadAllRoomsFromDB = this.loadAllRoomsFromDB.bind(this)\r\n        this.onClickRoom = this.onClickRoom.bind(this)\r\n        this.backToHome = this.backToHome.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAllRoomsFromDB()\r\n    }\r\n\r\n    loadAllRoomsFromDB(){\r\n        KPIRoomService.getAllRooms()\r\n            .then(\r\n                response => {\r\n                    this.setState({rooms : response.data})\r\n                }\r\n            )\r\n    }\r\n\r\n    onClickRoom(e){\r\n        this.setState({room_id: e.target.value, message: ''}, function () {\r\n            sessionStorage.setItem(\"room_id\", this.state.room_id);\r\n        });\r\n    }\r\n\r\n    onChangeId(e){\r\n        this.setState({category_id: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n    onChangeName(e){\r\n        this.setState({name: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n    onChangeUnit(e){\r\n        this.setState({unit: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n    onChangeDesc(e){\r\n        this.setState({desc: e.target.value, message: ''}, function () {\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        let data = {\r\n            name: this.state.name,\r\n            category_id: this.state.category_id,\r\n            desc: this.state.desc,\r\n            unit: this.state.unit,\r\n            room_id: sessionStorage.getItem(\"room_id\")\r\n        }\r\n\r\n        console.log(this.state.name)\r\n        console.log(this.state.category_id)\r\n        console.log(this.state.desc)\r\n        console.log(this.state.unit)\r\n        console.log(sessionStorage.getItem(\"room_id\"))\r\n\r\n        KPICateService.insertCategory(data)\r\n            .then(() => this.props.history.push('/listkpi'))\r\n        e.preventDefault();\r\n    }\r\n\r\n    backToHome(){\r\n        this.props.history.push(`/listkpi`)\r\n    }\r\n\r\n    render() {\r\n        let {id, name, desc, unit, room_id} = this.state\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"menu-side-bar\">\r\n                    <div className=\"image\">\r\n                        <Link to = {'/home'}>\r\n                            <img src={logo} className=\"App-logo-custom\" alt=\"logo\" />\r\n                        </Link>\r\n                    </div>\r\n                    <Link to={'/home'}>\r\n                        <a className=\"navbar-side\">▷ Quản lý kế hoạch</a>\r\n                    </Link>\r\n                    <Link to={'/hoachtoan'}>\r\n                        <a className=\"navbar-side\">▷ Quản lý hoạch toán</a>\r\n                    </Link>\r\n                    <Link to={'/listkpi'}>\r\n                        <a className=\"navbar-side\">▷ Quản lý KPI</a>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <h3>Create Form</h3>\r\n                    <h2 className=\"tab\">⮞ Quản lý KPI</h2>\r\n\r\n                    <Formik initialValues={{id, name, desc, unit, room_id}}\r\n                            validateOnchange = {true} validateOnBlur = {true}\r\n                             enableReinitialize={true}>\r\n                        {\r\n                            (props) => (\r\n                                <div>\r\n                                    <Form onSubmit = {this.onSubmit}\r\n                                          validateOnchange = {true}>\r\n                                        <label className=\"label_combobox-add\">Room: </label>\r\n                                        <select className=\"combobox-add\" onClick={this.onClickRoom}>\r\n                                            <option disabled selected >Choose the room:</option>\r\n                                            {\r\n                                                this.state.rooms.map((data) =>\r\n                                                    <option value={data.id}>{data.name}</option>\r\n                                                )\r\n                                            }\r\n                                        </select>\r\n                                        <br/>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label className=\"title-add\">KPI ID:</label><br/>\r\n                                            <Field className = \"form-control-edit\"\r\n                                                   onChange={(e) => this.onChangeId(e)} value = {this.state.id}\r\n                                                   type=\"text\" name = \"start_date\" required/>\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label className=\"title-add\">Name:</label><br/>\r\n                                            <Field className = \"form-control-edit\"\r\n                                                   onChange={(e) => this.onChangeName(e)}  value = {this.state.name}\r\n                                                   type=\"text\" name = \"value\" required/>\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label className=\"title-add\">Unit:</label><br/>\r\n                                            <Field className = \"form-control-edit\"\r\n                                                   onChange={(e) => this.onChangeUnit(e)}  value = {this.state.unit}\r\n                                                   type=\"text\" name = \"value\" required/>\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group-edit\">\r\n                                            <label className=\"title-add\">Description:</label><br/>\r\n                                            <textarea style={{height: 100}} className = \"form-control-edit\"\r\n                                                   onChange={(e) => this.onChangeDesc(e)}  value = {this.state.desc}\r\n                                                      type=\"text\" name = \"value\" required>zzz</textarea>\r\n                                        </fieldset>\r\n                                        <button onClick={() => this.backToHome()} className=\"btn-addnew\" type=\"submit\">Cancel</button>\r\n                                        <button className=\"btn-addnew\" type=\"submit\">Add New</button>\r\n                                    </Form>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                    <div className=\"footer\">\r\n                        Viettel Media, Inc.<br/><br/>\r\n                        + Address: 4th Floor The Light Tower - To Huu Street – Trung Van – Nam Tu Liem – Ha Noi <br/>\r\n                        + Tel: 024 6281 8818 <br/>\r\n                        + Copyright © 2021, Viettel Group\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AddKPI",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":2,"column":34,"nodeType":"142","messageId":"143","endLine":2,"endColumn":42},{"ruleId":"144","severity":1,"message":"145","line":164,"column":17,"nodeType":"146","messageId":"147","endLine":164,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":166,"column":18,"nodeType":"146","messageId":"147","endLine":166,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":168,"column":18,"nodeType":"146","messageId":"147","endLine":168,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":170,"column":18,"nodeType":"146","messageId":"147","endLine":170,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":172,"column":18,"nodeType":"146","messageId":"147","endLine":172,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":264,"column":25,"nodeType":"150","endLine":264,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":267,"column":25,"nodeType":"150","endLine":267,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":270,"column":25,"nodeType":"150","endLine":270,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":84,"column":25,"nodeType":"150","endLine":84,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":87,"column":25,"nodeType":"150","endLine":87,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":90,"column":25,"nodeType":"150","endLine":90,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":144,"column":25,"nodeType":"150","endLine":144,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":147,"column":25,"nodeType":"150","endLine":147,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":150,"column":25,"nodeType":"150","endLine":150,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":144,"column":25,"nodeType":"150","endLine":144,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":147,"column":25,"nodeType":"150","endLine":147,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":150,"column":25,"nodeType":"150","endLine":150,"endColumn":52},{"ruleId":"144","severity":1,"message":"145","line":163,"column":17,"nodeType":"146","messageId":"147","endLine":163,"endColumn":19},{"ruleId":"144","severity":1,"message":"145","line":165,"column":18,"nodeType":"146","messageId":"147","endLine":165,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":167,"column":18,"nodeType":"146","messageId":"147","endLine":167,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":169,"column":18,"nodeType":"146","messageId":"147","endLine":169,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":171,"column":18,"nodeType":"146","messageId":"147","endLine":171,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":263,"column":25,"nodeType":"150","endLine":263,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":266,"column":25,"nodeType":"150","endLine":266,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":269,"column":25,"nodeType":"150","endLine":269,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":84,"column":25,"nodeType":"150","endLine":84,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":87,"column":25,"nodeType":"150","endLine":87,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":90,"column":25,"nodeType":"150","endLine":90,"endColumn":52},{"ruleId":"140","severity":1,"message":"151","line":6,"column":9,"nodeType":"142","messageId":"143","endLine":6,"endColumn":14},{"ruleId":"140","severity":1,"message":"152","line":6,"column":16,"nodeType":"142","messageId":"143","endLine":6,"endColumn":20},{"ruleId":"140","severity":1,"message":"153","line":6,"column":22,"nodeType":"142","messageId":"143","endLine":6,"endColumn":28},{"ruleId":"148","severity":1,"message":"149","line":136,"column":25,"nodeType":"150","endLine":136,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":139,"column":25,"nodeType":"150","endLine":139,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":142,"column":25,"nodeType":"150","endLine":142,"endColumn":52},{"ruleId":"140","severity":1,"message":"154","line":2,"column":9,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"148","severity":1,"message":"149","line":92,"column":25,"nodeType":"150","endLine":92,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":95,"column":25,"nodeType":"150","endLine":95,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":98,"column":25,"nodeType":"150","endLine":98,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":101,"column":25,"nodeType":"150","endLine":101,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":104,"column":25,"nodeType":"150","endLine":104,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":107,"column":25,"nodeType":"150","endLine":107,"endColumn":52},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Field' is defined but never used.","'Form' is defined but never used.","'Formik' is defined but never used.","'ErrorMessage' is defined but never used.","no-global-assign","no-unsafe-negation"]